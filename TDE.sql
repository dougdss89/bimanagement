/*

========= TRANSPARENT DATA ENCRYPTION =========

*/

-- PRIMEIRO PASSO PARA CRIAÇÃO DO T.D.E É CRIANDO UMA SERVICE MASTER KEY
-- LEMBRANDO QUE DEVE SER CRIADO NO BANCO DE SISTEMA MASTER PARA VALER PARA TODA INSTâNCIA
-- CRIANDO A CHAVE
CREATE MASTER KEY
ENCRYPTION BY PASSWORD = 'seu_passw0rd!';

-- AGORA QUE A CHAVE FOI CRIADA PRECISAMOS DO CERTIFICADO
-- O CERTIFICADO TAMBÉM DEVE SER CRIADO NA MASTER, PARA VALER PARA TODA INSTÂNCIA
-- CRIANDO O CERTIFICADO
-- O CERTIFICADO NÃO PODE TER A CLAUSULA 'ENCRYPTION BY'
-- SE FOR DECLARADO UM ENCRIPTADOR PARA O CERTIFICADO, ELE PERDE A MASTER KEY E NÃO FUNCIONA PARA O T.D.E
CREATE CERTIFICATE [NOME_CERTIFICADO]
WITH SUBJECT = 'ASSUNTO'


-- AGORA, VAMOS CRIAR O BANCO QUE IREMOS USAR DE EXMPLO
-- VOU CRIAR UM BANCO SIMPLES PARA EXEMPLO, NADA IMPEDE QUE USE ALGUM EXISTENTE NA SUA MÁQUINA
CREATE DATABASE [NOME_BANCO]
USE DATABASE [NOME_BANCO]

-- CRIANDO A DATABASE ENCRYPTION KEY
-- A D.E.K É A CHAVE QUE IRÁ CRIPTOGRAFAR O BANCO
-- A CHAVE DO BANCO PRECISA DO CERTIFICADO CRIADO NA INSTÂNCIA MASTER
CREATE DATABASE ENCRYPTION KEY
WITH ALGORITHM = AES_256
ENCRYPTION BY SERVER CERTIFICATE TDECERT

-- QUANDO CRIAR A D.E.K, O PROPRIO SISTEMA IRÁ AVISAR QUE NÃO HÁ BACKUP DAS CHAVES DE CRIPTOGRAFIA
-- ABAIXO, COMO REALIZAR BACKUP DAS CHAVES
-- PRIMEIRO, VAMOS FAZER O BACKUP DA MASTER KEY QUE TÁ NO BANCO MASTER
USE master

-- BACKUP SERVICE MASTER KEY
BACKUP SERVICE MASTER KEY
TO FILE = 'SEU DIRETÓRIO\NOME_DO_ARQUIVO.KEY'
ENCRYPTION BY PASSWORD = 'SUA_SENHA!'

-- PROXIMO PASSO É O BACKUP DA MASTER KEY
BACKUP MASTER KEY
TO FILE = 'SEU DIRETÓRIO\NOME_DO_ARQUIVO.KEY'
ENCRYPTION BY PASSWORD = 'SUA_SENHA!';

-- BACKUP DO CERTIFICADO 
BACKUP CERTIFICATE TDECERT
TO FILE = 'F:\SQLBIM.BKP\CERT & KEY\TDECERT.CER'
WITH PRIVATE KEY (
					FILE = 'F:\SQLBIM.BKP\CERT & KEY\TDEPRIVKEY.KEY',
					ENCRYPTION BY PASSWORD = 'SUA SENHA!');

-- ABAIXO, UMA DMV PARA VERIFICAR SE O BANCO ESTÁ OU NÃO CRIPTOGRAFADO
-- ENCRYPTION_STATE = 03 SIGNIFCA QUE O BANCO ESTÁ CRIPTOGRAFADO
-- RODE ESSA DMV NO BANCO QUE FOI CRIPTOGRAFADO SEGUINDO O EXEMPLO
-- ESSA DMV PERMITE ACOMPANHAR TODO O PROCESSO DE CRIPTOGRAFIA E TROCA DE CHAVE DO BANCO
SELECT * FROM SYS.dm_database_encryption_keys

-- ALTERANDO O ESTADO DO BANCO PARA CRIPTOGRAFADO
-- AS QUATRO FORMAS DE ALTERAR O STATUS DO BANCO NO QUE TANGE A CRIPTOGRAFIA
ALTER DATABASE TDE_CERT SET ENCRYPTION ON
ALTER DATABASE TDE_CERT SET ENCRYPTION OFF
ALTER DATABASE TDE_CERT SET ENCRYPTION SUSPEND
ALTER DATABASE TDE_CERT SET ENCRYPTION RESUME

-- RODANDO A DMV NOVAMENTE
-- REPARE QUE AGORA SURGIU UM OUTRO DATABASE CRIPTOGRAFADO QUE NÃO DECLARAMOS SUA CRIPTOGRAFIA
SELECT database_id, encryption_state
FROM SYS.dm_database_encryption_keys

-- COM ESSA DMV, É POSSÍVEL DESCOBRIR QUAL O BANCO FOI CRIPTOGRAFADO 'SOZINHO'
-- ESSA DMV NÃO MOSTRA O STATUS, APENAS DIZ SE O BANCO É CRIPTOGRAFADO OU NÃO.
SELECT NAME, database_id, is_encrypted
FROM SYS.databases
WHERE is_encrypted = 1




