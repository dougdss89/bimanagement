/*

=========== CRIANDO UMA USER-DEFINED ROLE =========== 

*/
CREATE ROLE [NOME_ROLE]

-- INSERINDO USUÁRIOS DENTRO DA ROLE
-- OS USUÁRIOS DEVEM TER PERMISSÃO DE ACESSO (CONTA CRIADA) NO BANCO
ALTER ROLE [NOME_ROLE] ADD MEMBER [NOME_USUARIO]

-- INSERINDO A ROLE EM GRUPOS DE PERMISSÕES SEM ATRIBUIÇÃO INDIVIDUAL
-- AS ROLES AQUI, JÁ SÃO DEFAULT EM CADA BANCO, NÃO PRECISA CRIAR
-- COMO ESTAMOS ALTERANDO UMA ROLE INSERINDO A ROLE CRIADA NAS DATABASE ROLE, NA SINTAXE, ELAS VÊM PRIMEIRO

ALTER ROLE DB_DATAREADER ADD MEMBER [SUA_ROLE_CRIADA] -- AQUI, TODOS  OS USUÁRIOS PODERÃO EXECUTAR O COMANDO SELECT
ALTER ROLE DB_DATAWRITER ADD MEMBER [SUA_ROLE_CRIADA] -- TODOS OS USUÁRIOS AGRUPARDOS NA ROLE PODERÃO INSERIR DADOS

-- PARA EXCLUIR A ROLE DO GRUPO, CASO TENHA INSERIDO ERRADO, O COMANDO NÃO VARIA MUITO
ALTER ROLE DB_DATAREADER DROP MEMBER [SUA_ROLE_CRIADA] -- COM ISSO, NENHUM USUÁRIO NESTA ROLE EXECUTARA MAIS O COMANDO SELECT.

-- ATRIBUINDO PERMISSÃO PARA USUÁRIOS E ROLES

-- ATRIBUINDO AO USUÁRIO OU A ROLE A AUTORIZAÇÃO PARA EXECUTAR SELECT
GRANT SELECT TO [NOME_USUARIO]
GRANT SELECT TO [NOME_ROLE]
GRANT SELECT TO [NOME_USUARIO] WITH GRANT OPTION -- PERMITE QUE ESTE POSSA DISTRIBUIR PERMISSÕES PARA OUTROS

-- PERMISSÃO PARA UM USUÁRIO EXECUTAR UMA STORED PROCEDURE
GRANT EXEC TO [NOME_USUARIO]
GRANT EXEC TO [NOME_ROLE]
GRANT EXEC ON [SP_HELP] TO [NOME_USUARIO] -- GARANTE QUE O USUARIO POSSA EXECUTAR APENAS UMA PROCEDURE ESPECÍFICA

-- PARA FUNÇÃO TAMBÉM É BASEADO NO GRANT SELECT, UMA FEZ QUE AS FUNÇÕES SÃO 'SELECIONADAS'
GRANT SELECT ON [NOME_FUNÇÃO] TO [NOME_USUARIO]
GRANT SELECT ON [NOME_FUNÇÃO] TO [NOME_ROLE]

-- FILTRANDO GRANT SELECT PARA TABELAS E COLUNAS
GRANT SELECT ON [TABELA] (COLUNA) TO [NOME_USUARIO]

-- PERMISSAO DE UPDATE NA TABELA
GRANT UPDATE ON [TABELA] TO [NOME_USUARIO]
GRANT UPDATE ON [TABELA] (COLUNA) TO [NOME_USUARIO]

GRANT SELECT ON SALES.ORDERS TO USER02PL

-- PERMISSÃO EM SCHEMAS DE TABELAS

-- PERMISSÃO PARA SELECT ESPECÍFICO EM UM SCHEMA
GRANT SELECT ON SCHEMA::[NOME_SCHEMA] TO [NOME_USUARIO]
GRANT SELECT ON SCHEMA:: [NOME SCHEMA] TO [NOME_ROLE]

-- UPDATE EM UM SCHEMA
GRANT UPDATE ON SCHEMA:: [NOME_SCHEMA] TO [NOME_USUARIO]
GRANT UPDATE ON SCHEMA:: [NOME_SCHEMA] TO [NOME_ROLE]

-- NEGANDO PERMISSÃO  AO SCHEMA
DENY SELECT ON SCHEMA:: [NOME_SCHEMA] TO [NOME_USUARIO]
REVOKE SELECT ON SCHEMA::[NOME_SCHEMA] TO [NOME_USUARIO]

/*

========= CUSTOM SERVER ROLE =========

*/

-- CRIANDO A SERVER ROLE PARA TESTE
CREATE SERVER ROLE AZSRVROLE

-- AQUI EU POSSO ATRIBUIR TANTO UM USUÁRIO, QUANTO UM DATABASE ROLE (CUSTOM OU DE SYSTEM)
-- FOI ATRIBUIDO NO EXEMPLO ABAIXO, PERMISSÃO PARA USUÁRIOS REALIZAREM OPERAÇÕES DE BULK
ALTER SERVER ROLE BULKADMIN ADD MEMBER [NOME_SERVER_ROLE]
ALTER SERVER ROLE BULKADMIN ADD MEMBER [NOME_USUARIO]

-- CASO QUEIRA DEIXAR UM GRUPO OU USUÁRIO ESPECÍFICO COMO ADMINISTRADOR DO SERVIDOR, BASTA:
ALTER SERVER ROLE SERVERADMIN ADD MEMBER [NOME_SERVER_ROLE]
ALTER SERVER ROLE SERVERADMIN ADD MEMBER [NOME_USUARIO]

-- PERMISSÃO DO SERVIDOR PARA CRIAR LOGINS E AUTORIZAÇÕES PARA TODOS OS BANCOS, É:
ALTER SERVER ROLE SECURITYADMIN ADD MEMBER [NOME_SERVER_ROLE]
ALTER SERVER ROLE SECURITYADMIN ADD MEMBER [NOME_USUARIO]

-- PERMITE CRIAR BANCOS DE DADOS NO SERVIDOR
ALTER SERVER ROLE [NOME_SERVER_ROLE] ADD 

/*

============ APPLICATION ROLE ============

*/

-- ABAIXO A SINTAXE PARA CRIAÇÃO DE UMA APPLICATION ROLE NO BANCO
-- É IMPORTATE DECLARAR O SCHEMA PADRÃO PARA LIMITAR O CAMPO DE ATUAÇÃO DA APPROLE
-- NÃO ESQUEÇA DE CRIAR NO BANCO ONDE A APLICAÇÃO IRÁ 'TRABALHAR'
CREATE APPLICATION ROLE [NOME_APPLICATION_ROLE]
WITH PASSWORD = 'SENHA!', DEFAULT_SCHEMA = SALES;

-- ATIVANDO A APPLICATION ROLE NO BANCO
-- COMO MENCIONADO, PRECISAMOS EXECUTAR UMA STORED PROCEDURE PARA ATIVAR
EXEC sp_setapprole '[NOME_APPLICATION_ROLE]', 'SENHA!';
go

-- DANDO PERMISSÃO PARA A APPLICATION ROLE REALIZAR LEITURA E ESCRITAS EM TABELAS
-- O APPLICATION ROLE ENCARA AS DATABASE ROLES COMO SCHEMA, POR ISSO, A SINTAXE É UM POUCO ALTERADA
ALTER AUTHORIZATION ON SCHEMA:: DB_DATAREADER TO [NOME_APPROLE]
ALTER AUTHORIZATION ON SCHEMA:: [db_denydatawriter] TO [NOME_APPROLE]

-- FORMA CONVENCIONAL DE ATRIBUIR PERMISSÃO PARA APPLICATION ROLE
ALTER ROLE DB_DATAREADER ADD MEMBER [NOME_APPROLE]

-- QUERY DE SISTEMA PARA VERIFICAR TODAS AS PERMISSÕES DISPONÍVEIS
-- TAMBÉM FUNCIONA NO AZURESQL
select * from sys.fn_builtin_permissions(default)

-- ESTA QUERY MOSTRA TODAS AS PERMISSÕES A NÍVEL DE SERVIDOR
SELECT * FROM sys.fn_builtin_permissions('SERVER') ORDER BY permission_name; 



/*

============ ORPHANED USER ============

*/

-- EXECUTE AS QUERIES NO BANCO EM QUE SE QUER DESCOBRIR OS USUÁRIOS ÓRFÃOS
-- O QUE FAZ UM USUÁRIO FICAR 'ORFÃO' DO SEU LOGIN É A PERDA DO SID COMO REFERÊNCIA

-- ESTA QUERY IRÁ MOSTRAR TODOS OS USUÁRIOS QUE O BANCO POSSUI
-- QUANDO EXECUTADA NO BANCO QUE O USUÁRIO SEM LOGIN ESTÁ, SALVE O SID DESTE USUÁRIO.
SELECT name, principal_id, type_desc,sid 
FROM SYS.database_principals
WHERE type = 'S'

-- ESSA QUERY IRÁ MOSTRAR TODOS OS LOGINS BASEADOS EM SQL SERVER AUTHENTICATION
-- EXECUTE ESTA QUERY E VEJA SE O LOGIN APARECE, E SALVE O SID
SELECT name, principal_id, sid
FROM SYS.sql_logins

-- ESSA QUERY MOSTRA TODOS OS LOGINS DE ACESSO A INSTÂNCIA DE BANCOS
-- OS LOGINS SÃO SEPARADOS PELOS TIPOS WINDOWS E SQL SERVER
SELECT name, principal_id, sid, type_desc, TYPE
FROM SYS.server_principals
WHERE TYPE = 'S' OR type = 'U'
ORDER BY type_desc

-- COM O SID, BASTA CRIAR UM NOVO LOGIN PARA O USUÁRIO
-- O LOGIN RECRIADO DEVE TER O MESMO SID DO USUÁRIO
CREATE LOGIN USER02PL 
WITH PASSWORD = 'SUA_SENHA_FORTE',
SID = 0x6192A1205A98C84CBDA29BA3A33808F3 -- SID COPIADO

-- APÓS, ALTERE O USUÁRI APONTANDO PARA O LOGIN RECRIADO 
ALTER USER USER02PL WITH LOGIN = USER02PL -- ATRIBUINDO O USUÁRIO PARA O SEU DEVIDO LOGIN

-- QUERY ALTERNATIVA PARA O TROUBLESHOOTING
SELECT name, sid, principal_id
FROM sys.database_principals 
WHERE type = 'S' 
  AND name NOT IN ('guest', 'INFORMATION_SCHEMA', 'sys')
  AND authentication_type_desc = 'INSTANCE';


